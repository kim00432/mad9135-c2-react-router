{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Home.js","components/Loader/Loader.js","components/Users/Users.js","components/Details/Details.js","components/Addresses/Addresses.js","components/App/App.js","index.js"],"names":["Navbar","className","activeClassName","to","exact","Home","Loader","Users","props","data","sort","a","b","compareUserId","userId","length","map","item","index","src","picture","medium","alt","name","first","last","email","cell","Details","detail","id","find","parseInt","findUser","useParams","console","log","large","address","login","username","password","uuid","Addresses","compareLastName","Table","TableHead","TableRow","TableCell","TableBody","thumbnail","App","useState","setData","randomNum","min","max","Math","floor","random","generateRandomNum","url","fetch","resp","json","destructuring","results","addressArr","i","street","location","number","city","state","country","postcode","fullAddressArr","newArr","forEach","element","newObj","push","useEffect","fetchData","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22f622ce.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom'\nimport './navbar.css'\n\nexport default function Navbar() {\n    return (\n        <div className=\"navbar\">\n            <NavLink activeClassName=\"active\" to=\"/\" exact>\n                Home\n            </NavLink>\n            <NavLink activeClassName=\"active\" to=\"/users\">\n                User List\n            </NavLink>\n            <NavLink activeClassName=\"active\" to=\"/addresses\">\n                Address List\n            </NavLink> \n      </div>\n    )\n}\n","import './home.css'\n\nexport default function Home() {\n    return (\n        <div>\n          <h1>Welcome to Random User Site</h1>\n          <div className=\"instructions\">\n            <ul>\n              <li className=\"instructions_list\">This site lets you get information of random users.</li>\n              <li className=\"instructions_list\">Whenever you refresh this site, you can see a list of users between 16 and 32 randomly.</li>\n              <li className=\"instructions_list\">You can click one of navigation bar or type each route to link to each page directly.</li>\n              <li className=\"instructions_list\">If you manually adds a URL that has no match then the app should redirect to the Home page.</li>\n              <li className=\"instructions_list\">\n                <div className=\"li_title\">User list page ('/users/' route)</div>\n                <ul className=\"ul_list\">\n                  <li>- It shows a list of user cards that display the values for name, emails, cell, plus a image of each user.</li>\n                  <li>- If you click one of displayed cards, you can see more details of the selected user on a 'User Details page'.</li>\n                </ul>\n              </li>\n              <li className=\"instructions_list\">\n                <div className=\"li_title\">User details page ('/users/:id' route)</div>\n                <ul className=\"ul_list\">\n                  <li>- It shows the selected user's more information such as full address, login information.</li>\n                </ul>\n              </li>\n              <li className=\"instructions_list\">\n                <div className=\"li_title\">Address List page ('/addresses' route)</div>\n                <ul className=\"ul_list\">\n                  <li>- You can see a list of the names and addresses sorted by last name.</li>\n                  <li>- There is a link which is connected to the User Details page.</li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n    )\n}\n","import './loader.css'\n\nexport default function Loader() {\n    return (\n        <div className=\"loader_container\">\n            <span className=\"loader\"></span>\n            <div className=\"loader_text\">\n                loading...\n            </div>\n        </div>\n    )\n}\n","import './users.css'\nimport Loader from '../Loader/Loader'\nimport { Link } from 'react-router-dom'\n\nexport default function Users(props) {\n    const compareUserId = (a, b) => {\n        if (a < b) return -1;\n        if(a > b ) return 1;\n        return 0;\n    }\n    props.data.sort((a, b) => {\n        return compareUserId(a.userId, b.userId)\n    })\n    if(props.data.length === 0) {return <Loader />}\n    return (\n        <div>\n            <div className=\"user_container\">\n                <div className=\"user_list\">\n                {props.data.map((item, index) => (\n                    <Link to={`/users/${item.userId}`} key={`${item.userId}`}>\n                        <div className=\"user_card\">\n                            <div className=\"user_info\">\n                                <img src={item.picture.medium} alt=\"\" className=\"user_img\"></img>\n                                <p className=\"user_info_name\">{`${item.name.first} ${item.name.last}`}</p>\n                                <p>{item.email}</p>\n                                <p>{item.cell}</p>\n                            </div>\n                        </div>\n                    </Link>\n                ))}\n                </div>\n          </div>\n        </div>\n    )\n}\n","import './details.css'\nimport Loader from '../Loader/Loader'\nimport { useParams } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom'\n\nexport default function Details(props) {\n    function findUser(id) {\n        return props.data.find((item, index) => id == parseInt(item.userId))\n    }\n\n    let { id } = useParams() //hooks from React router dom\n    let detail = findUser(id)\n    console.log(detail)\n\n    if(props.data.length === 0) {return <Loader />}\n    if(!detail) {return <Redirect to=\"/\" />}\n\n    return (\n        <div className=\"user_details_container\">  \n            <div className=\"user_details\">\n                <div className=\"user_details_info1\">\n                    <p className=\"user_name\">{detail.name.first} {detail.name.last}</p>\n                    <img src={detail.picture.large} alt=\"\"></img>\n                </div>\n                <div className=\"user_details_info2\">\n                    <p className=\"user_cell\">Cell: <span className=\"user_cell_info\">{detail.cell}</span></p>\n                    <p className=\"user_email\">Email: <span className=\"user_email_info\">{detail.email}</span></p>\n                    <p className=\"user_address\">Address: <span className=\"user_address_info\">{detail.address}</span></p>\n                    <div className=\"user_login\">\n                        <p className=\"user_login_title\">Login Information</p>\n                        <p className=\"user_login_username\">Username: {detail.login.username}</p>\n                        <p className=\"user_login_password\">Password: {detail.login.password}</p>\n                        <p className=\"user_login_uuid\">UUID: {detail.login.uuid}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import './addresses.css'\nimport Loader from '../Loader/Loader';\nimport { Table,TableHead,TableRow,TableCell,TableBody } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\n\nexport default function Addresses(props) {\n    const compareLastName = (a, b) => {\n        if (a < b) return -1;\n        if(a > b ) return 1;\n        return 0;\n    }\n    props.data.sort((a, b) => {\n        return compareLastName(a.name.last, b.name.last)\n    })\n\n    if(props.data.length === 0) {return <Loader />}\n    return (\n        <div className=\"addressList\">\n           <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell className=\"tableHead\">Name</TableCell>\n                    <TableCell className=\"tableHead\">Address</TableCell>\n                    <TableCell className=\"tableHead\">Details</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n               {props.data.map((item) => {\n                return (\n                <TableRow key={`${item.userId}`}>\n                    <TableCell><img src={`${item.picture.thumbnail}`} alt=\"\"></img></TableCell>\n                    <TableCell>{item.name.last}, {item.name.first}</TableCell>\n                    <TableCell>{item.address}</TableCell>\n                    <TableCell><Link to={`/users/${item.userId}`} className=\"detailLink\">Link</Link></TableCell>\n                </TableRow>\n                )\n                })}\n            </TableBody>\n            </Table>\n        </div>\n    )\n}\n","import './App.css';\nimport Navbar from '../Navbar/Navbar';\nimport Home from '../Home/Home';\nimport Users from '../Users/Users';\nimport Details from '../Details/Details';\nimport Addresses from '../Addresses/Addresses';\nimport {useState, useEffect} from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nfunction App() {\n  const [data, setData] = useState([]) \n\n  async function fetchData() {\n    function generateRandomNum(min, max) { // min and max included \n      return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n    const randomNum = generateRandomNum(16, 32)\n    let url = `https://randomuser.me/api/?results=${randomNum}&format=json&nat=au,ca,nz,gb,us&seed=kim00432`   \n    let resp = await fetch(url)\n    let data = await resp.json()\n    destructuring(data.results)\n    console.log(\"Fetching data\")\n  }\n  useEffect(()=>{\n    //all useEffect functions run on the initial render of the components\n    console.log('useEffect was called')\n    fetchData()\n  }, []) //here we are monitoring for changes to name \n  console.log(data)\n\n  function destructuring(data) {\n    let addressArr = []\n    for(let i=0; i < data.length; i++) {\n        addressArr[i] = {\n            street: `${data[i].location.street.number} ${data[i].location.street.name}`, \n            city: data[i].location.city, \n            state: data[i].location.state, \n            country: data[i].location.country,\n            postcode: data[i].location.postcode\n        }\n    }\n    let fullAddressArr = addressArr.map(a => {\n        return `${a.street}, ${a.city}, ${a.state}, ${a.country}, ${a.postcode}`\n    })\n    \n    let index = 0;\n    let newArr = [];\n    data.forEach((element) => {\n        let newObj = { \n            userId: index + 1,\n            address: fullAddressArr[index],\n            ...element\n        }\n        newArr.push(newObj)\n        index++;\n    });\n    console.log(newArr)\n    setData(newArr)\n    //new array being put into 'data'\n    //changing a state variable tells react to look and see\n    //if something needs to be re-rendered \n  }\n\n  return (\n    <div className=\"App\">\n        <header>\n          <Navbar />\n        </header>\n        <main>\n          <Switch>\n            <Route path=\"/users\" exact>\n              <Users data={data}/>\n            </Route>\n            <Route path=\"/users/:id\">\n              <Details data={data}/>\n            </Route>\n            <Route path=\"/addresses\">\n              <Addresses data={data}/>\n            </Route>\n            <Route path=\"/\" exact component={Home} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}